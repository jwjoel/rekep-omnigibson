def stage3_subgoal_constraint1(end_effector, keypoints):
    """Ensure the white pen is 10cm above the black pen holder (keypoint 5)."""
    pen_holder_keypoint = keypoints[5]
    offsetted_point = pen_holder_keypoint + np.array([0, 0, 0.1])  # 10cm above the pen holder
    cost = np.linalg.norm(keypoints[2] - offsetted_point)
    return cost

def stage3_subgoal_constraint2(end_effector, keypoints):
    """Ensure the white pen is still upright (parallel to the z-axis)."""
    pen_vector = keypoints[3] - keypoints[2]
    z_axis = np.array([0, 0, 1])
    cost = np.abs(np.dot(pen_vector, z_axis) / (np.linalg.norm(pen_vector) * np.linalg.norm(z_axis)) - 1)
    return cost

